class {{classname}} implements JsonEnum {
  /// The underlying value of this enum member.
  final {{dataType}} value;

  const {{classname}}._internal(this.value);

  {{#allowableValues}}
    {{#enumVars}}
      {{#description}}
  /// {{description}}
      {{/description}}
  static const {{classname}} {{{name}}} = {{classname}}._internal({{{value}}});
    {{/enumVars}}
  {{/allowableValues}}

  static List<{{classname}}> get values => const [
    {{#allowableValues}}
      {{#enumVars}}
        {{{name}}},
      {{/enumVars}}
    {{/allowableValues}}
      ];

@override
  {{dataType}} toJson () {
    return value;
  }

  @override
  String toString () {
    return value;
  }

  static {{classname}} fromJson({{dataType}} data) {
    switch (data) {
    {{#allowableValues}}
        {{#enumVars}}
            case {{{value}}}: return {{classname}}.{{{name}}};
        {{/enumVars}}
    {{/allowableValues}}
    default: throw Exception('Unknown enum value to decode: $data');
    }
  }
}




class {{classname}} implements JsonModel{
  {{#vars}}
  {{#description}}/// {{{description}}}{{/description}}
  {{^isEnum}}
  {{^defaultValue}}{{{dataType}}} {{name}};{{/defaultValue}}{{#defaultValue}}{{{dataType}}} {{name}} = {{defaultValue}};{{/defaultValue}}
  {{/isEnum}}
  {{#isEnum}}
  {{#allowableValues}}
  {{#min}} // range from {{min}} to {{max}}{{/min}}{{{datatypeWithEnum}}} {{name}}{{#required}} = {{{defaultValue}}}{{/required}}{{^required}}{{/required}};
  {{/allowableValues}}
  {{/isEnum}}
  {{/vars}}

  {{classname}}({
  {{#vars}}
    {{#required}}@required this.{{name}}{{/required}}{{^required}}this.{{name}}{{#defaultValue}} = {{defaultValue}}{{/defaultValue}}{{/required}},
  {{/vars}}
  });


  // ignore: prefer_constructors_over_static_methods
  static {{classname}} fromJson(Map<String, dynamic> json) {
    if (json == null) return null;
    final r = {{classname}}();
  {{#vars}}
    r.{{name}} = {{{vendorExtensions.x-deserializer}}};
  {{/vars}}
    return r;
  }

    @override
  Map<String, dynamic> toJson() {
    return {

{{#vars}}
    {{^isNullable}}
        if ({{name}} != null)
    {{/isNullable}}
    {{#isDateTime}}
        '{{baseName}}': {{name}} == null ? null : encodeDateTime({{name}}),
    {{/isDateTime}}
    {{#isDate}}
        '{{baseName}}': {{name}} == null ? null : encodeDateTime({{name}}),
    {{/isDate}}
    {{^isDateTime}}
        {{^isDate}}
            {{^isEnum}}
                '{{baseName}}': {{name}},
            {{/isEnum}}
            {{#isEnum}}
                '{{baseName}}': {{name}},
            {{/isEnum}}
        {{/isDate}}
    {{/isDateTime}}
{{/vars}}


};

  }
}
{{#vars}}
{{#isEnum}}
{{>enum_inline}}
{{/isEnum}}
{{/vars}}
